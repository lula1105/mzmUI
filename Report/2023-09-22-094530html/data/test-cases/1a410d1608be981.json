{"uid":"1a410d1608be981","name":"test_serach_group[args0]","fullName":"testcase.test_search_group.TestSearchGroup#test_serach_group","historyId":"dc12489301f38195d1864dc70d216c7f","time":{"start":1695347130400,"stop":1695347154159,"duration":23759},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testcase.test_search_group.TestSearchGroup object at 0x000002A88D701B50>\nargs = {'case_name': '查询集团存在集团数据', 'check': {'check_type': 'contains', 'element_info': '//*[text()=\"1695115735111111\"]', 'find_type': 'xpath', 'info': '检查元素存在'}, 'data': {'groupName': 1695115735, 'loginEmai': '1695115735@qq.com'}}\n\n    @pytest.mark.parametrize('args', testDataAndcheck)\n    def test_serach_group(self, args):\n        groupName = args.get('data').get('groupName')\n        loginEmai = args.get('data').get('loginEmai')\n        checkType = args.get('check').get('check_type')\n        checkFindType = args.get('check').get('find_type')\n        checkEle = args.get('check').get('element_info')\n        # 初始化查询集团势力\n        sg = serach_groupPage.searchGroup()\n>       sg.opreateSearchGroupAndCheck(groupName, loginEmai, checkType, checkFindType, checkEle)\n\ntestcase\\test_search_group.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageStep.serach_groupPage.searchGroup object at 0x000002A88FD23190>\ngroupName = 1695115735, loginEmai = '1695115735@qq.com', checkType = 'contains'\ncheckFindType = 'xpath', checkEle = '//*[text()=\"1695115735111111\"]'\n\n    def opreateSearchGroupAndCheck(self,groupName,loginEmai,checkType,checkFindType,checkEle):\n        beforePath = os.path.dirname(os.path.dirname(__file__))\n        #获取维护元素定位的yaml文件\n        filePath = beforePath + \"\\\\testElemntYaml\\\\searchgroupEle.yaml\"\n        self.yamlreader = readY.read_oneYamlData(self, filePath)\n        #类实例化\n        #继承basicpage后实例化类\n        #bp = basicPage()\n        #初始化浏览器驱动打开浏览器\n        #bp.openBrowser(browser='chrome')\n        bp = adminLogin.admin_login().login()\n        with allure.step(\"打开集团搜索界面\"):\n            # 打开地址\n            url = config.host + self.yamlreader[\"testinfo\"][\"url\"]\n            bp.get(url)\n        with allure.step(\"查找集团编号输入数据\"):\n            #查找集团编号输入数据\n            type = self.yamlreader[\"testStep\"][0][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][0][\"element_info\"]\n            bp.sendKeys(type, eleLoc, groupName)\n    \n        with allure.step(\"在邮箱输入框输入数据\"):\n            # 在邮箱输入框输入数据\n            type = self.yamlreader[\"testStep\"][1][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][1][\"element_info\"]\n            bp.sendKeys(type, eleLoc, loginEmai)\n        with allure.step(\"点击搜索\"):\n            # 点击搜索\n            type = self.yamlreader[\"testStep\"][2][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][2][\"element_info\"]\n            bp.click(type, eleLoc)\n            # 检查登录后，当前环境是否是dev环境\n            # 强制等待5秒\n            time.sleep(5)\n        with allure.step(\"检查查询元素结果\"):\n            #检查元素是否存在\n            flag=bp.isOrNoElementExist(checkType,checkFindType,checkEle)\n            #检查查询元素结果\n>           assert flag == True\nE           AssertionError\n\npageStep\\serach_groupPage.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestSearchGroup","time":{"start":1695347130399,"stop":1695347130400,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testcase.test_search_group.TestSearchGroup object at 0x000002A88D701B50>\nargs = {'case_name': '查询集团存在集团数据', 'check': {'check_type': 'contains', 'element_info': '//*[text()=\"1695115735111111\"]', 'find_type': 'xpath', 'info': '检查元素存在'}, 'data': {'groupName': 1695115735, 'loginEmai': '1695115735@qq.com'}}\n\n    @pytest.mark.parametrize('args', testDataAndcheck)\n    def test_serach_group(self, args):\n        groupName = args.get('data').get('groupName')\n        loginEmai = args.get('data').get('loginEmai')\n        checkType = args.get('check').get('check_type')\n        checkFindType = args.get('check').get('find_type')\n        checkEle = args.get('check').get('element_info')\n        # 初始化查询集团势力\n        sg = serach_groupPage.searchGroup()\n>       sg.opreateSearchGroupAndCheck(groupName, loginEmai, checkType, checkFindType, checkEle)\n\ntestcase\\test_search_group.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageStep.serach_groupPage.searchGroup object at 0x000002A88FD23190>\ngroupName = 1695115735, loginEmai = '1695115735@qq.com', checkType = 'contains'\ncheckFindType = 'xpath', checkEle = '//*[text()=\"1695115735111111\"]'\n\n    def opreateSearchGroupAndCheck(self,groupName,loginEmai,checkType,checkFindType,checkEle):\n        beforePath = os.path.dirname(os.path.dirname(__file__))\n        #获取维护元素定位的yaml文件\n        filePath = beforePath + \"\\\\testElemntYaml\\\\searchgroupEle.yaml\"\n        self.yamlreader = readY.read_oneYamlData(self, filePath)\n        #类实例化\n        #继承basicpage后实例化类\n        #bp = basicPage()\n        #初始化浏览器驱动打开浏览器\n        #bp.openBrowser(browser='chrome')\n        bp = adminLogin.admin_login().login()\n        with allure.step(\"打开集团搜索界面\"):\n            # 打开地址\n            url = config.host + self.yamlreader[\"testinfo\"][\"url\"]\n            bp.get(url)\n        with allure.step(\"查找集团编号输入数据\"):\n            #查找集团编号输入数据\n            type = self.yamlreader[\"testStep\"][0][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][0][\"element_info\"]\n            bp.sendKeys(type, eleLoc, groupName)\n    \n        with allure.step(\"在邮箱输入框输入数据\"):\n            # 在邮箱输入框输入数据\n            type = self.yamlreader[\"testStep\"][1][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][1][\"element_info\"]\n            bp.sendKeys(type, eleLoc, loginEmai)\n        with allure.step(\"点击搜索\"):\n            # 点击搜索\n            type = self.yamlreader[\"testStep\"][2][\"find_type\"]\n            eleLoc = self.yamlreader[\"testStep\"][2][\"element_info\"]\n            bp.click(type, eleLoc)\n            # 检查登录后，当前环境是否是dev环境\n            # 强制等待5秒\n            time.sleep(5)\n        with allure.step(\"检查查询元素结果\"):\n            #检查元素是否存在\n            flag=bp.isOrNoElementExist(checkType,checkFindType,checkEle)\n            #检查查询元素结果\n>           assert flag == True\nE           AssertionError\n\npageStep\\serach_groupPage.py:52: AssertionError","steps":[{"name":"打开集团搜索界面","time":{"start":1695347138400,"stop":1695347138516,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"查找集团编号输入数据","time":{"start":1695347138516,"stop":1695347138832,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"在邮箱输入框输入数据","time":{"start":1695347138832,"stop":1695347138887,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"点击搜索","time":{"start":1695347138887,"stop":1695347144072,"duration":5185},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"检查查询元素结果","time":{"start":1695347144072,"stop":1695347154150,"duration":10078},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"D:\\python\\mzmUI\\pageStep\\serach_groupPage.py\", line 52, in opreateSearchGroupAndCheck\n    assert flag == True\n           ^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":5,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestSearchGroup::0","time":{"start":1695347154228,"stop":1695347154228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"登录后查询集团数据"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_search_group"},{"name":"subSuite","value":"TestSearchGroup"},{"name":"host","value":"DESKTOP-H9F7F9J"},{"name":"thread","value":"65884-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_search_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"args","value":"{'case_name': '查询集团存在集团数据', 'data': {'groupName': 1695115735, 'loginEmai': '1695115735@qq.com'}, 'check': {'element_info': '//*[text()=\"1695115735111111\"]', 'find_type': 'xpath', 'check_type': 'contains', 'info': '检查元素存在'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1a410d1608be981.json","parameterValues":["{'case_name': '查询集团存在集团数据', 'data': {'groupName': 1695115735, 'loginEmai': '1695115735@qq.com'}, 'check': {'element_info': '//*[text()=\"1695115735111111\"]', 'find_type': 'xpath', 'check_type': 'contains', 'info': '检查元素存在'}}"]}